/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.museum.controller;

import org.springframework.format.annotation.DateTimeFormat;
import com.museum.model.Error;
import java.time.LocalDate;
import com.museum.model.MuseumDailyHours;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-04-08T19:39:03.127433+01:00[Europe/London]", comments = "Generator version: 7.4.0")
@Validated
@Tag(name = "Operations", description = "Operational information about the museum.")
public interface OperationsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /museum-hours : Get museum hours
     * Get upcoming museum operating hours.
     *
     * @param startDate Starting date to retrieve future operating hours from. Defaults to today&#39;s date. (optional)
     * @param page Page number to retrieve. (optional, default to 1)
     * @param limit Number of days per page. (optional, default to 10)
     * @return Success. (status code 200)
     *         or  (status code 400)
     *         or  (status code 404)
     */
    @Operation(
        operationId = "getMuseumHours",
        summary = "Get museum hours",
        description = "Get upcoming museum operating hours.",
        tags = { "Operations" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = MuseumDailyHours.class))),
                @Content(mediaType = "application/problem+json", array = @ArraySchema(schema = @Schema(implementation = MuseumDailyHours.class)))
            }),
            @ApiResponse(responseCode = "400", description = "", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/problem+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/problem+json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "MuseumPlaceholderAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/museum-hours",
        produces = { "application/json", "application/problem+json" }
    )
    
    default ResponseEntity<List<MuseumDailyHours>> getMuseumHours(
        @Parameter(name = "startDate", description = "Starting date to retrieve future operating hours from. Defaults to today's date.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startDate", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @Parameter(name = "page", description = "Page number to retrieve.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page", required = false, defaultValue = "1") Integer page,
        @Max(30) @Parameter(name = "limit", description = "Number of days per page.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false, defaultValue = "10") Integer limit
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"2023-10-29\", \"timeClose\" : \"18:00\", \"timeOpen\" : \"09:00\" }, { \"date\" : \"2023-10-29\", \"timeClose\" : \"18:00\", \"timeOpen\" : \"09:00\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.OK);

    }

}
